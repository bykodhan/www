{"version":3,"sources":["webpack:///./src/templates/BlogPost/styles.ts","webpack:///./src/templates/BlogPost/index.tsx"],"names":["styles","useStyles","createUseStyles","pageQuery","BlogPostTemplate","data","pageContext","previous","location","next","post","markdownRemark","Main","SEO","title","frontmatter","description","excerpt","Container","PageContent","Post","details","Pagination","prev","to","fields","slug","rel","className","summarize","getDisqusConfig"],"mappings":"6RAIeA,EAFQ,GCYjBC,EAAYC,0BAAgBF,GAiErBG,GAFEC,UAvDuD,SAAC,GAIjE,IAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,YAKQC,GAHJ,EADJC,SAEgBP,IAEWK,EAAnBC,UAAUE,EAASH,EAATG,KACZC,EAAOL,EAAKM,eAElB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAOJ,EAAKK,YAAYD,MACxBE,YAAaN,EAAKK,YAAYC,aAAeN,EAAKO,UAEpD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMV,KAAMA,EAAMW,SAAO,IAEzB,kBAACC,EAAA,EAAD,CACEC,KACEhB,GACE,kBAAC,OAAD,CACEiB,GAAIjB,EAASkB,OAAOC,KACpBC,IAAI,OACJC,UAAU,sBACVd,MAAOP,EAASQ,YAAYD,OAJ9B,KAMKe,YAAUtB,EAASQ,YAAYD,QAIxCL,KACEA,GACE,kBAAC,OAAD,CACEe,GAAIf,EAAKgB,OAAOC,KAChBC,IAAI,OACJC,UAAU,kBACVd,MAAOL,EAAKM,YAAYD,OAEvBe,YAAUpB,EAAKM,YAAYD,OAN9B,SAYR,kBAACK,EAAA,EAAD,KACE,kBAAC,kBAAoBW,YAAgBpB,QAStB","file":"component---src-templates-blog-post-index-tsx-88c9dd409beeaac537ed.js","sourcesContent":["import { Styles } from 'react-jss';\n\nconst styles: Styles = {};\n\nexport default styles;\n","import React from 'react';\nimport { Link, graphql, PageProps } from 'gatsby';\nimport { createUseStyles } from 'react-jss';\nimport { DiscussionEmbed } from 'disqus-react';\nimport Container from '../../components/Bulma/Container';\nimport MainLayout from '../../layouts/Main';\nimport PageContent from '../../components/PageContent';\nimport SEO from '../../components/SEO';\nimport Post from '../../components/Post';\nimport Pagination from '../../components/Pagination';\nimport { Data } from '../../models';\nimport { getDisqusConfig, summarize } from '../../utils';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\ninterface PageContext {\n  slug: string;\n  previous: Data.BlogPost;\n  next: Data.BlogPost;\n}\n\nconst BlogPostTemplate: React.FC<PageProps<Data.Data, PageContext>> = ({\n  data,\n  pageContext,\n  location,\n}) => {\n  const classes = useStyles();\n\n  const { previous, next } = pageContext;\n  const post = data.markdownRemark;\n\n  return (\n    <MainLayout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <Container>\n        <PageContent>\n          <Post post={post} details />\n\n          <Pagination\n            prev={\n              previous && (\n                <Link\n                  to={previous.fields.slug}\n                  rel=\"prev\"\n                  className=\"pagination-previous\"\n                  title={previous.frontmatter.title}\n                >\n                  ← {summarize(previous.frontmatter.title)}\n                </Link>\n              )\n            }\n            next={\n              next && (\n                <Link\n                  to={next.fields.slug}\n                  rel=\"next\"\n                  className=\"pagination-next\"\n                  title={next.frontmatter.title}\n                >\n                  {summarize(next.frontmatter.title)} →\n                </Link>\n              )\n            }\n          />\n        </PageContent>\n        <PageContent>\n          <DiscussionEmbed {...getDisqusConfig(post)} />\n        </PageContent>\n      </Container>\n    </MainLayout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date\n        description\n        author\n        pinned\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}